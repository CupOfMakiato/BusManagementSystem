@page
@model BusManagementSystem.Pages.Member.RegisterTicketModel
@using Microsoft.AspNetCore.Authorization;
@{
    Layout = "_MemberLayout";
    ViewData["Title"] = "Đăng Ký Vé Tháng";
}

<div class="register-ticket-wrapper">
    <div class="register-ticket-container">
        <h2>Đăng Ký Vé Tháng</h2>

        <form method="post" enctype="multipart/form-data" id="registerTicketForm">
            <div class="section">
                <h3>Thông Tin Người Dùng</h3>

                @if (Model.User != null)
                {
                    <div class="form-group">
                        <label>Họ Tên:</label>
                        <input type="text" class="form-control" value="@Model.User.Name" readonly />
                    </div>

                    <div class="form-group">
                        <label>Số Điện Thoại:</label>
                        <input type="text" class="form-control" value="@Model.User.PhoneNumber" readonly />
                    </div>

                    <div class="form-group">
                        <label>Email:</label>
                        <input type="email" class="form-control" value="@Model.User.Email" readonly />
                    </div>

                    <div class="form-group">
                        <label>Ngày Sinh:</label>
                        <input type="text" class="form-control" value="@Model.User.DateOfBirth?.ToString("dd-MM-yyyy")" readonly />
                    </div>
                }
                else
                {
                    <p>Thông tin người dùng không khả dụng. Vui lòng đăng nhập lại.</p>
                }
            </div>

            <div class="section">
                <h3>Chi Tiết Vé</h3>

                <div class="form-group">
                    <label>Ảnh Thẻ 3x4:</label>
                    <input type="file" name="Photo3x4" accept="image/*" class="form-control" required />
                </div>

                <div class="form-group">
                    <label>Loại Vé:</label>
                    <div class="radio-group">
                        <label>
                            <input type="radio" name="TicketType" value="Một tuyến" onchange="handleTicketTypeChange()" required />
                            Một tuyến - 100,000 VND
                        </label>
                        <label>
                            <input type="radio" name="TicketType" value="Liên Tuyến" onchange="handleTicketTypeChange()" />
                            Liên Tuyến - 200,000 VND
                        </label>
                    </div>
                </div>

                <div class="form-group" id="routeSelection" style="display: none;">
                    <label for="SelectedRouteId">Chọn Tuyến:</label>
                    <select id="SelectedRouteId" name="SelectedRouteId" class="form-control">
                        <option value="">-- Chọn Tuyến --</option>
                        @if (Model.Routes != null && Model.Routes.Any())
                        {
                            @foreach (var route in Model.Routes)
                            {
                                <option value="@route.RouteId">@route.RouteName</option>
                            }
                        }
                        else
                        {
                            <option value="">Không có tuyến nào khả dụng</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>
                        <input type="checkbox" id="priority" asp-for="IsPriority" onchange="handlePriorityChange()" />
                        Ưu Tiên - Giảm giá 50%
                    </label>
                </div>

                <div class="form-group" id="priorityType" style="display: none;">
                    <label>Loại Ưu Tiên:</label>
                    <select id="PriorityType" name="PriorityType" class="form-control">
                        <option value="">-- Chọn Loại Ưu Tiên --</option>
                        <option value="Học Sinh, Sinh Viên">Học Sinh, Sinh Viên</option>
                        <option value="Công Nhân khu CN">Công Nhân khu CN</option>
                    </select>
                </div>

                <div class="form-group" id="studentWorkerIDUploads" style="display: none;">
                    <label>Thẻ Sinh Viên/Thẻ Công Nhân:</label>
                    <div class="form-group">
                        <label>Mặt Trước:</label>
                        <input type="file" id="IDCardFront" name="IDCardFront" accept="image/*" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Mặt Sau:</label>
                        <input type="file" id="IDCardBack" name="IDCardBack" accept="image/*" class="form-control" />
                    </div>
                </div>
            </div>

            <div class="section">
                <h3>Thời Gian Hiệu Lực Của Vé</h3>
                <div class="form-group">
                    <label>Ngày Bắt Đầu:</label>
                    <input type="text" class="form-control"
                           value="@(Model.TicketStartDate != null ? Model.TicketStartDate.ToString("dd-MM-yyyy") : "Chưa xác định")"
                           name="TicketStartDate"
                           readonly />
                </div>

                <div class="form-group">
                    <label>Ngày Kết Thúc:</label>
                    <input type="text" class="form-control"
                           value="@(Model.TicketEndDate != null ? Model.TicketEndDate.ToString("dd-MM-yyyy") : "Chưa xác định")"
                           name="TicketEndDate"
                           readonly />
                </div>

                <div class="form-group">
                    <label>Giá:</label>
                    <input type="text" id="CalculatedPrice" name="Price" class="form-control"
                           value="@(Model.CalculatedPrice != 0 ? Model.CalculatedPrice.ToString("N0") + " VND" : "Chưa xác định")"
                           readonly />
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Tiếp Tục Thanh Toán</button>
        </form>
    </div>
</div>

@if (Model.showAlert)
{
    <script>
        alert('User already had a ticket in use!');
    </script>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        try {
            const priorityCheckbox = document.getElementById("priority");
            const priorityTypeDiv = document.getElementById("priorityType");
            const studentWorkerIDUploadsDiv = document.getElementById("studentWorkerIDUploads");
            const calculatedPriceField = document.getElementById("CalculatedPrice");
            const routeSelection = document.getElementById("routeSelection");

            function updatePriorityFields() {
                const displayStyle = priorityCheckbox.checked ? "block" : "none";
                priorityTypeDiv.style.display = displayStyle;
                studentWorkerIDUploadsDiv.style.display = displayStyle;
            }

            // Call function on page load
            updatePriorityFields();

            // Attach event listener to checkbox
            priorityCheckbox.addEventListener("change", () => {
                updatePriorityFields();
                calculatePrice(); // Recalculate price when checkbox changes
            });

            // Calculate Price
            function calculatePrice() {
                const ticketType = document.querySelector('input[name="TicketType"]:checked');
                const isPriority = priorityCheckbox.checked;
                let calculatedPrice = 0;

                if (ticketType && ticketType.value === "Một tuyến") {
                    routeSelection.style.display = "block";
                    calculatedPrice = 100000;
                } else {
                    routeSelection.style.display = "none";
                    calculatedPrice = 200000;
                }

                // Apply discount if priority
                if (isPriority) {
                    calculatedPrice *= 0.5; // 50% discount
                }

                calculatedPriceField.value = calculatedPrice.toLocaleString() + " VND";
            }

            // Attach event listeners for ticket type changes
            const ticketTypes = document.querySelectorAll('input[name="TicketType"]');
            ticketTypes.forEach(type => type.addEventListener("change", calculatePrice));

            // Initial calculation on page load
            calculatePrice();
        } catch (error) {
            console.error("Error in DOMContentLoaded:", error);
        }
    });

    window.addEventListener('load', function () {
        // This will prevent navigating back to the checkout page
        window.history.replaceState(null, document.title, window.location.href);
        window.addEventListener('popstate', function (event) {
            window.history.replaceState(null, document.title, window.location.href);
        });
    });
</script>
